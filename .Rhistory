geom_line(data = averagePropertyPrice, aes(x = year, y = avPrice, group = ward))
ggplot() +
geom_point(data = averagePropertyPrice, aes(x = year, y = avPrice, size = count))+
geom_line(data = averagePropertyPrice, aes(x = year, y = avPrice, colour = ward)) +
guides(colour = F)
ggplot() +
geom_line(data = averagePropertyPrice, aes(x = year, y = avPrice, colour = ward))
ggplot() +
geom_line(data = averagePropertyPrice, aes(x = year, y = avPrice, colour = ward)) +
guides(colour = F)
averagePropertyPrice <- averagePropertyPrice %>%
mutate(rankPrice = min_rank(avPrice))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice))
averagePropertyPrice <- luton_w_geogs %>%
group_by(ward,year) %>%
summarise(avPrice = mean(price), count = n())
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice)) %>%
mutate(rankPrice = dense_rank(averagePropertyPrice))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice)) %>%
mutate(rankPrice = dense_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice)) %>%
mutate(rankPrice = min_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice)) %>%
group_by(avPerWard) %>%
mutate(rankPrice = min_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice)) %>%
group_by(avPerWard) %>%
mutate(rankPrice = dense_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice)) %>%
ungroup(ward) %>%
mutate(rankPrice = dense_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice)) %>%
ungroup() %>%
mutate(rankPrice = dense_rank(avPerWard))
max(averagePropertyPrice$rankPrice)
unique(averagePropertyPrice$ward) %>% length
subsetOfAvPropPrices <- averagePropertyPrice %>%
filter(rankPrice < 6, rankPrice > (max(rankPrice)-5))
subsetOfAvPropPrices <- averagePropertyPrice %>%
filter(rankPrice < 6 & rankPrice > (max(rankPrice)-5))
subsetOfAvPropPrices <- averagePropertyPrice %>%
filter(rankPrice < 6 | rankPrice > (max(rankPrice)-5))
unique(subsetOfAvPropPrices$ward) %>% length
ggplot() +
geom_line(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, colour = ward))
ggplot() +
geom_line(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
ggplot() +
geom_line(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, colour = ward)) +
geom_point(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, size = count)) +
scale_y_log10()
ggplot() +
geom_point(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, size = count)) +
geom_line(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
averagePropertyPrice <- luton_w_geogs %>%
group_by(ward,year) %>%
#  summarise(avPrice = mean(price), count = n())
summarise(avPrice = mean(price))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice))
averagePropertyPrice <- averagePropertyPrice %>%
mutate(rankPrice = min_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
ungroup(ward) %>%
mutate(rankPrice = min_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
ungroup() %>%
mutate(rankPrice = min_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
ungroup() %>%
mutate(rankPrice = dense_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
mutate(rankPrice = dense_rank(avPerWard))
averagePropertyPrice <- averagePropertyPrice %>%
group_by(ward) %>%
mutate(avPerWard = mean(avPrice))
averagePropertyPrice <- averagePropertyPrice %>%
mutate(rankPrice = dense_rank(avPerWard))
class(averagePropertyPrice)
averagePropertyPrice <- averagePropertyPrice %>%
ungroup() %>%
mutate(rankPrice = dense_rank(avPerWard))
range(averagePropertyPrice$rankPrice)
unique(averagePropertyPrice$ward) %>% length
unique(averagePropertyPrice$ward) %>% length
subsetOfAvPropPrices <- averagePropertyPrice %>%
filter(rankPrice < 6 | rankPrice > (max(rankPrice)-5))
max(averagePropertyPrice$rankPrice)-5
subsetOfAvPropPrices <- averagePropertyPrice %>%
filter(rankPrice < 6)
ggplot() +
geom_line(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, colour = ward))
subsetOfAvPropPrices <- averagePropertyPrice %>%
filter(rankPrice < 6 | rankPrice > (max(rankPrice)-5))
ggplot() +
geom_line(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, colour = ward))
subsetOfAvPropPrices <- averagePropertyPrice %>%
filter(rankPrice < 6)
View(subsetOfAvPropPrices)
max(averagePropertyPrice$rankPrice)-5
max(averagePropertyPrice$rankPrice)-5
averagePricePerWard <- group_by(luton_w_geogs, ward)
averagePricePerWard <- summarise(averagePricePerWard, avPrice = mean(price))
View(averagePricePerWard)
rm(averagePropertyPrice)
averagePricePerWardperYear <- group_by(luton_w_geogs, ward, year)
averagePricePerWardperYear <- summarise(averagePricePerWardperYear, avPrice = mean(price))
View(averagePricePerWardperYear)
averagePricePerWardperYear <- luton_w_geogs %>%
group_by(ward,year) %>%
summarise(avPrice = mean(price))
ggplot() +
geom_line(data = averagePricePerWardperYear, aes(x = year, y = avPrice, group = ward))
ggplot() +
geom_line(data = averagePricePerWardperYear, aes(x = year, y = avPrice, colour = ward))
ggplot() +
geom_line(data = averagePricePerWardperYear, aes(x = year, y = avPrice, colour = ward)) +
guides(colour = F)
View(averagePricePerWard)
names(averagePricePerWard)
averagePricePerWard <- averagePricePerWard %>% arrange(desc(avPrice))
nrow(averagePricePerWard)
topBottomWards <- averagePricePerWard$ward[c(1:5,100:104)]
topBottomWards
topBottomWards
luton_w_geogs %>% names
subset_of_luton_w_geogs <- luton_w_geogs %>%
filter(ward %in% topBottomWards)
ggplot() +
geom_line(data = subset_of_luton_w_geogs, aes(x = year, y = avPrice, colour = ward))
View(subset_of_luton_w_geogs)
SUBSET_averagePricePerWardperYear <- averagePricePerWardperYear %>%
filter(ward %in% topBottomWards)
SUBSET_avPricePerWardperYear <- averagePricePerWardperYear %>%
filter(ward %in% topBottomWards)
ggplot() +
geom_line(data = SUBSET_avPricePerWardperYear, aes(x = year, y = avPrice, colour = ward))
averagePricePerWardperYear$ward %in% topBottomWards
df <- read_csv('data/averagePricePerWards.csv')
df <- read_csv('data/averagePricePerWards.csv')
View(df)
highSalesCount <- df[df$numberOfSales > 100000,]
View(df)
View(highSalesCount)
View(averagePricePerWard)
df <- read_csv('data/averagePricePerTTWA.csv')
df <- read_csv('data/averagePricePerTTWA.csv')
SUBSET_avPricePerWardperYear <- averagePricePerWardperYear[averagePricePerWardperYear$ward %in% topBottomWards,]
SUBSET_avPricePerWardperYear <- averagePricePerWardperYear[(averagePricePerWardperYear$ward %in% topBottomWards),]
ggplot() +
geom_line(data = SUBSET_avPricePerWardperYear, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
warnings()
class(luton_w_geogs$postcode)
class(luton_w_geogs$price)
class(luton_w_geogs$date)
class(luton_w_geogs$ward)
class(luton_w_geogs$postcode)
class(luton_w_geogs$price)
class(luton_w_geogs$ward)
ggplot() +
geom_line(data = SUBSET_avPricePerWardperYear, aes(x = year, y = avPrice, colour = factor(ward)))
class(luton_w_geogs$price)
class(luton_w_geogs$ward)
class(luton_w_geogs$price)
class(luton_w_geogs$ward)
everyonesAge <- c(45,35,72,23,11,19)
everyonesName <- c('bob','gill','geoff','gertrude','cecil','zoe')
people <- data.frame(ages = everyonesAge, names = everyonesName)
people
people
class(people$names)
people$names
people
class(people$names)
people$names
people$names[1]
as.character(people$names[1])
library(readr)
#for resizing images
#http://stackoverflow.com/questions/15625990/how-to-set-size-for-local-image-using-knitr-for-markdown
library(png)
library(grid)
library(dplyr)
library(lubridate)
library(pryr)
everyonesAge <- c(45,35,72,23,11,19)
everyonesName <- c('bob','gill','geoff','gertrude','cecil','zoe')
people <- data.frame(ages = everyonesAge, names = everyonesName)
class(people$names)
class(people$ages)
people[people$names == 1,]
as.numeric(people$names)
luton_w_geogs <- readRDS('data/luton_with_geographies_attached.rds')
averagePricePerWard <- group_by(luton_w_geogs, ward)
averagePricePerWard <- summarise(averagePricePerWard, avPrice = mean(price))
averagePricePerWardperYear <- group_by(luton_w_geogs, ward, year)
averagePricePerWardperYear <- summarise(averagePricePerWardperYear, avPrice = mean(price))
averagePricePerWardperYear <- luton_w_geogs %>%
group_by(ward,year) %>%
summarise(avPrice = mean(price))
ggplot() +
geom_line(data = averagePricePerWardperYear, aes(x = year, y = avPrice, group = ward))
library(ggplot2)
ggplot() +
geom_line(data = averagePricePerWardperYear, aes(x = year, y = avPrice, group = ward))
ggplot() +
geom_line(data = averagePricePerWardperYear, aes(x = year, y = avPrice, colour = ward))
averagePricePerWard <- averagePricePerWard %>% arrange(desc(avPrice))
topBottomWards <- averagePricePerWard$ward[c(1:5,100:104)]
topBottomWards
SUBSET_avPricePerWardperYear <- averagePricePerWardperYear %>%
filter(ward %in% topBottomWards)
ggplot() +
geom_line(data = SUBSET_avPricePerWardperYear, aes(x = year, y = avPrice, colour = ward))
ggplot() +
geom_line(data = SUBSET_avPricePerWardperYear, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
class(SUBSET_avPricePerWardperYear$ward)
SUBSET_avPricePerWardperYear$ward <- factor(SUBSET_avPricePerWardperYear$ward)
class(SUBSET_avPricePerWardperYear$ward)
SUBSET_avPricePerWardperYear$ward
levels(SUBSET_avPricePerWardperYear$ward)
ggplot() +
geom_line(data = SUBSET_avPricePerWardperYear, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
View(SUBSET_avPricePerWardperYear)
chk <- SUBSET_avPricePerWardperYear
class(chk$avPrice)
class(chk$ward)
chk$wardtest <- factor(chk$ward,-chk$avPrice)
levels(chk$wardtest)
View(chk)
chk$wardtest <- reorder(chk$ward,-chk$avPrice)
levels(chk$wardtest)
ggplot() +
geom_line(data = SUBSET_avPricePerWardperYear, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
SUBSET_avPricePerWardperYear$ward <-
reorder(SUBSET_avPricePerWardperYear$ward, -SUBSET_avPricePerWardperYear$avPrice)
levels(SUBSET_avPricePerWardperYear$ward)
ggplot() +
geom_line(data = SUBSET_avPricePerWardperYear, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
data4viz <- averagePricePerWardperYear %>%
filter(ward %in% topBottomWards)
View(data4viz)
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward))
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
class(data4viz$ward)
data4viz$ward <- factor(data4viz$ward)
class(data4viz$ward)
data4viz$ward
levels(data4viz$ward)
data4viz$ward <-
reorder(data4viz$ward, -data4viz$avPrice)
levels(data4viz$ward)
thing <- c(1,5,4,77,33,23)
thing2 <- c(12,13,15,7,3,9)
thing3 <- c(1,5,4,77,33,23,12,13,15,7,3,9)
mean(thing)
mean(thing2)
mean(thing3)
mean( c(mean(thing),mean(thing2)) )
data4viz <- data4viz %>%
group_by(ward) %>%
mutate(avPerWardOverAllYears = mean(avPrice))
data4viz$ward <-
reorder(data4viz$ward, -data4viz$avPerWardOverAllYears)
levels(data4viz$ward)
data4viz$ward <-
reorder(data4viz$ward, -data4viz$avPrice)
#Check the new levels
levels(data4viz$ward)
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10() +
scale_color_brewer(palette = 'Paired')
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10() +
scale_color_brewer(palette = 'Spectral')
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10() +
scale_color_brewer(palette = 'Set3')
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10() +
#scale_color_brewer(palette = 'Set3') +
scale_color_gradientn(colours = rainbow(10))
ggplot() +
geom_point(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, size = count)) +
geom_line(data = subsetOfAvPropPrices, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
ggplot() +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = count)) +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
averagePricePerWardperYear <- luton_w_geogs %>%
group_by(ward,year) %>%
summarise(avPrice = mean(price), countOfSales = n())
ggplot() +
geom_line(data = averagePricePerWardperYear, aes(x = year, y = avPrice, group = ward))
data4viz <- averagePricePerWardperYear %>%
filter(ward %in% topBottomWards)
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward))
data4viz$ward <- factor(data4viz$ward)
data4viz <- data4viz %>%
group_by(ward) %>%
mutate(avPerWardOverAllYears = mean(avPrice))
data4viz$ward <-
reorder(data4viz$ward, -data4viz$avPerWardOverAllYears)
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
ggplot() +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = count)) +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
ggplot() +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales)) +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales)) +
scale_y_log10()
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales * 2)) +
scale_y_log10()
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = (countOfSales * 2))) +
scale_y_log10()
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales)) +
scale_y_log10()
ggplot() +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales)) +
scale_y_log10()
ggplot() +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales)) +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
```{r eval = F}
ggplot() +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales)) +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward), alpha = 0.5) +
scale_y_log10()
```
ggplot() +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales), alpha = 0.5) +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
ggplot() +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales), colour = 'grey') +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
ggplot() +
geom_point(data = data4viz, aes(x = year, y = avPrice, size = countOfSales), colour = 'grey') +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
everyonesName[c(F,T,F,T,F,T)]
everyonesAge > 30
everyonesName[everyonesAge > 30]
output <- ggplot() +
geom_point(data = data4viz,
aes(x = year, y = avPrice, size = countOfSales),
colour = 'grey') +
geom_line(data = data4viz, aes(x = year, y = avPrice, colour = ward)) +
scale_y_log10()
output
ggsave(output, 'images/luton_topAndBottomWardPrices.png', dpi = 150, width = 7, height = 5)
ggsave('images/luton_topAndBottomWardPrices.png', output, dpi = 150, width = 7, height = 5)
ggsave('images/luton_topAndBottomWardPrices.png', output, dpi = 150, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices.png', output, dpi = 300, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices.png', output, dpi = 300, width = 16, height = 10)
ggsave('images/luton_topAndBottomWardPrices.png', output, dpi = 300, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices_large.png', output, dpi = 300, width = 16, height = 10)
ggsave('images/luton_topAndBottomWardPrices.png', output, dpi = 50, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices.png', output, dpi = 300, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices_lowres.png', output, dpi = 50, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices_lowres.png', output, dpi = 100, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices_lowres.png', output, dpi = 75, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices_lowres.png', output, dpi = 50, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices_lowres.png', output, dpi = 70, width = 8, height = 5)
ggsave('images/luton_topAndBottomWardPrices_lowres.png', output, dpi = 75, width = 8, height = 5)
top50ttwas <- read_file('https://dl.dropboxusercontent.com/u/306562/SMI/intro2r/landRegistry_top50TTWAs_by_salesCount.zip')
class(top50ttwas)
top50ttwas <- read_file('https://dl.dropboxusercontent.com/u/306562/SMI/intro2r/landRegistry_top50TTWAs_by_salesCount.csv')
top50ttwas <- read_file('https://dl.dropboxusercontent.com/u/306562/SMI/intro2r/landRegistry4class_priorToCitySplit.csv')
top10ttwas <- read_file('https://dl.dropboxusercontent.com/u/306562/SMI/intro2r/landRegistry_top10TTWAs_by_salesCount.csv.gz')
top10ttwas <- read_csv('https://dl.dropboxusercontent.com/u/306562/SMI/intro2r/landRegistry_top10TTWAs_by_salesCount.csv.gz')
top10ttwas <- read_csv('https://dl.dropboxusercontent.com/u/306562/SMI/intro2r/landRegistry_top10TTWAs_by_salesCount.csv.gz')
View(top10ttwas)
unique(top10ttwas$ttwa_name)
top10ttwas <- read_csv('http://bit.ly/top10ttwas')
top10ttwas <- read_csv('http://bit.ly/toptenttwas')
names(top10ttwas)
head(top10ttwas)
unique(top10ttwas$ttwa_name)
listOfCities <- unique(top10ttwas$ttwa_name)
listOfCities
for(city in listOfCities){
print(city)
}
city <- 'London'
cityData <- top10ttwas %>% filter(ttwa_name == city)
top10ttwas <- read_csv('http://bit.ly/toptenttwas')
top10ttwas %>% names
top10ttwas$year <- year(top10ttwas$date)
top10ttwas %>% names
for(city in listOfCities){
print(city)
}
cityData <- top10ttwas %>% filter(ttwa_name == city)
names(cityData)
averagePricePerWardperYear <- cityData %>%
group_by(ward,year) %>%
summarise(avPrice = mean(price), countOfSales = n())
averagePricePerWard <- cityData %>%
group_by(ward) %>%
summarise(avPrice = mean(price)) %>%
arrange(desc(avPrice))
View(averagePricePerWard)
averagePricePerWard <- cityData %>%
group_by(ward) %>%
summarise(avPrice = mean(price), count = n()) %>%
arrange(desc(avPrice))
london <- read_csv('LONDON_landRegistryData.csv')
london <- read_csv('data/LONDON_landRegistryData.csv')
unique(cityData$ward)[unique(cityData$ward)=='Cordwainer']
city
city <- London
city <- 'London'
averagePricePerWard <- cityData %>%
group_by(ward) %>%
summarise(avPrice = mean(price), count = n()) %>%
arrange(desc(avPrice))
View(averagePricePerWard)
cityData <- top10ttwas %>% filter(ttwa_name == city)
averagePricePerWard <- cityData %>%
group_by(ward) %>%
summarise(avPrice = mean(price), count = n()) %>%
arrange(desc(avPrice))
averagePricePerWardperYear <- cityData %>%
group_by(ward,year) %>%
summarise(avPrice = mean(price), countOfSales = n())
numwards <- nrow(averagePricePerWard)
numwards
(numwards-5):numwards
(numwards-4):numwards
topBottomWards
data4viz <- averagePricePerWardperYear %>%
filter(ward %in% topBottomWards)
data4viz$ward
data4viz$ward %>% unique
topBottomWards
topBottomWards <- averagePricePerWard$ward[c(1:5,(numwards-4):numwards)]
topBottomWards
data4viz <- averagePricePerWardperYear %>%
filter(ward %in% topBottomWards)
data4viz$ward
data4viz$wardtest <- factor(averagePricePerWard$ward, levels = averagePricePerWard$avPrice)
data4viz$wardtest <- factor(data4viz$ward, levels = -data4viz$avPrice)
data4viz$wardtest <- reorder(data4viz$wardtest, -data4viz$avPrice)
data4viz$wardtest <- factor(data4viz$ward)
data4viz$wardtest <- reorder(data4viz$wardtest, -data4viz$avPrice)
data4viz$wardtest <- factor(data4viz$ward)
data4viz$wardtest <- reorder(data4viz$wardtest, -data4viz$avPrice)
levels(data4viz$wardtest)
data4viz <- data4viz %>%
group_by(ward) %>%
mutate(avPerWardOverAllYears = mean(avPrice))
data4viz$wardtest2 <- factor(data4viz$ward)
data4viz$wardtest2 <- factor(data4viz$ward)
data4viz$wardtest2 <- reorder(data4viz$wardtest2, -data4viz$avPerWardOverAllYears)
levels(data4viz$wardtest)
levels(data4viz$wardtest2)
